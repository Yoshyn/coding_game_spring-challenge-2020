Dans le path finder :
  -> retourner les pos (pour les exclures de le grille)
  -> Faire un path_finder avec une distance (X) qui cherche a maximiser le nombre de points gagner

ALGO :

-> CAN KILL : target le mechant

ELSE
  STOP CONDITION pts > 10 || on rencontre un pas copain
  -> BEST_SCORING sur X max cases (ou empty?)
    -> X max case = total_case ???

    scoring = le scoring de la case. Une cell ennemy mais week rapporte aussi 1 points !

  -> return max scoring path

  -> On update la grille aprÃ¨s avec les positions !
  -> A chaque move, on update la grille avec la next pos pour eviter de blocker.

=> Can remove bullet if there's a enemy pacman visible.

ELSE VISIBLE BULLET avec distance min.
  (with path_finder)


    data ||= [
      ['#', '#', '2', '1', '2', '#'],
      ['5', '@', '1', '1', '1', '1'],
      ['#', '#', '1', '1', '#', '#'],
    ]

    => max 1 => [0,1] : (5)
    => max 2 => [0,1], [1,1] : (5)
    => max 3 => [0,1], [1,1], [2,1] : (6)

    # Init
    visited = {}
    to_visit = [["(1,1)", nil, 0]]
    # Tour 1
    visited = {"(1,1)" => [nil, 0]}
    to_visit = [
      ["(1,1)", "(0,1)", 5],
      ["(1,1)", "(2,1)", 1],
    ]
    # Tour 2
    visited = {
      "(1,1)" => [nil, 0],
      "(0,1)" => ["(0,1)", 5],
    }
    to_visit = [
      ["(1,1)", "(0,1)", 1],
      ["(1,1)", "(2,1)", 1],
    ]









    => max 4 => [0,1], [1,1], [2,1], [2,0] : (8)
    => max 5 => [0,1], [1,1], [2,1], [2,0] : (7)
             => [2,1], [2,0], [2,1], [3,1], [3,2] : (7)
    => max 6 => (10) * 3
